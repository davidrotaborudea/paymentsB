name: CI/CD Pipeline
on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  # SonarCloud Analysis Job
  sonar:
    name: SonarCloud analysis
    runs-on: ubuntu-latest
    steps:
      # Checkout code
      - name: Checkout repository
        uses: actions/checkout@v2

      # Set up JDK 17 (latest supported)
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '17'

      # Cache SonarCloud dependencies
      - name: Cache SonarCloud packages
        uses: actions/cache@v2
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      # Cache Maven dependencies
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      # Run SonarCloud analysis
      - name: Analyze with SonarCloud
        run: mvn -B clean verify sonar:sonar -Dsonar.projectKey=davidrotaborudea_paymentsB -Dsonar.organization=davidrotaborudea -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=${{ secrets.SONAR_TOKEN }} -DskipTests
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  # Build and Package Job
  build:
    needs: sonar
    name: Build and Package
    runs-on: ubuntu-latest
    steps:
      # Checkout code
      - name: Checkout repository
        uses: actions/checkout@v2

      # Set up JDK 17
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '17'

      # Cache Maven dependencies
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      # Build the project and package the JAR
      - name: Build with Maven
        run: mvn -B package -DskipTests

      # Verify if the JAR was generated
      - name: Verify JAR exists
        run: ls -l target/paymentsb-0.0.1-SNAPSHOT.jar

      # Upload the JAR as an artifact
      - name: Upload JAR
        uses: actions/upload-artifact@v3
        with:
          name: artifact
          path: target/paymentsb-0.0.1-SNAPSHOT.jar

  # Docker Build and Push Job
  docker:
    needs: build
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    steps:
      # Checkout code
      - name: Checkout repository
        uses: actions/checkout@v2

      # Build & push Docker image
      - name: Build & push Docker image
        uses: mr-smithers-excellent/docker-build-push@v6
        with:
          image: davidrotaborudea/paymentsb
          tags: latest
          registry: docker.io
          dockerfile: Dockerfile
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
